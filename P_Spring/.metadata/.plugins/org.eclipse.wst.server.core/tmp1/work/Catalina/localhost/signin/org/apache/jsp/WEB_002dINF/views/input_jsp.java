/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.19
 * Generated at: 2019-06-10 02:57:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class input_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>데이터 입력</title>\r\n");
      out.write("<link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/input.css\"\r\n");
      out.write("\trel=\"stylesheet\" />\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\t<a href=\"/signin\">목록으로</a>\r\n");
      out.write("\t<form action=\"input_data\" method=\"get\">\r\n");
      out.write("\t\t<label>이름</label> <input type=\"text\" placeholder=\"이름입력\" name=\"name\" />\r\n");
      out.write("\t\t<label>주소</label> <input type=\"text\" placeholder=\"주소\" name=\"address\" />\r\n");
      out.write("\t\t<label>생일</label>\r\n");
      out.write("\t\t<select name=\"birthday_month\">\r\n");
      out.write("\t\t<option value=\"1\">1월</option>\r\n");
      out.write("\t\t<option value=\"2\">2월</option>\r\n");
      out.write("\t\t<option value=\"3\">3월</option>\r\n");
      out.write("\t\t<option value=\"4\">4월</option>\r\n");
      out.write("\t\t<option value=\"5\">5월</option>\r\n");
      out.write("\t\t<option value=\"6\">6월</option>\r\n");
      out.write("\t\t<option value=\"7\">7월</option>\r\n");
      out.write("\t\t<option value=\"8\">8월</option>\r\n");
      out.write("\t\t<option value=\"9\">9월</option>\r\n");
      out.write("\t\t<option value=\"10\">10월</option>\r\n");
      out.write("\t\t<option value=\"11\">11월</option>\r\n");
      out.write("\t\t<option value=\"12\">12월</option>\r\n");
      out.write("\t\t</select>\r\n");
      out.write("\t\t<select name=\"birthday_day\">\r\n");
      out.write("\t\t<option value=\"1\">1</option>\r\n");
      out.write("\t\t<option value=\"2\">2</option>\r\n");
      out.write("\t\t<option value=\"3\">3</option>\r\n");
      out.write("\t\t<option value=\"4\">4</option>\r\n");
      out.write("\t\t<option value=\"5\">5</option>\r\n");
      out.write("\t\t<option value=\"6\">6</option>\r\n");
      out.write("\t\t<option value=\"7\">7</option>\r\n");
      out.write("\t\t<option value=\"8\">8</option>\r\n");
      out.write("\t\t<option value=\"9\">9</option>\r\n");
      out.write("\t\t<option value=\"10\">10</option>\r\n");
      out.write("\t\t<option value=\"11\">11</option>\r\n");
      out.write("\t\t<option value=\"12\">12</option>\r\n");
      out.write("\t\t<option value=\"13\">13</option>\r\n");
      out.write("\t\t<option value=\"14\">14</option>\r\n");
      out.write("\t\t<option value=\"15\">15</option>\r\n");
      out.write("\t\t<option value=\"16\">16</option>\r\n");
      out.write("\t\t<option value=\"17\">17</option>\r\n");
      out.write("\t\t<option value=\"18\">18</option>\r\n");
      out.write("\t\t<option value=\"19\">19</option>\r\n");
      out.write("\t\t<option value=\"20\">20</option>\r\n");
      out.write("\t\t<option value=\"21\">21</option>\r\n");
      out.write("\t\t<option value=\"22\">22</option>\r\n");
      out.write("\t\t<option value=\"23\">23</option>\r\n");
      out.write("\t\t<option value=\"24\">24</option>\r\n");
      out.write("\t\t<option value=\"25\">25</option>\r\n");
      out.write("\t\t<option value=\"26\">26</option>\r\n");
      out.write("\t\t<option value=\"27\">27</option>\r\n");
      out.write("\t\t<option value=\"28\">28</option>\r\n");
      out.write("\t\t<option value=\"29\">29</option>\r\n");
      out.write("\t\t<option value=\"30\">30</option>\r\n");
      out.write("\t\t<option value=\"31\">31</option>\r\n");
      out.write("\t\t</select>\r\n");
      out.write("\t\t<label>좋아하는 색상</label> <input type=\"text\" placeholder=\"좋아하는 색상\"\r\n");
      out.write("\t\t\tname=\"favoriteColor\" /> <input type=\"submit\" value=\"입력 완료\" />\r\n");
      out.write("\t</form>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
